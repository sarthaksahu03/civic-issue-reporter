import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';
import { registerSW } from 'virtual:pwa-register';

// Register the service worker generated by vite-plugin-pwa
// We use 'prompt' mode configured in vite.config.ts; this registers SW and
// will prompt users to update when a new version is available.
if (import.meta.env.PROD) {
  registerSW({
    immediate: true,
    onNeedRefresh() {
      // Optional: show a toast/notification to reload for update.
      // For now, auto-refresh to get the latest content when available.
      window.location.reload();
    },
    onOfflineReady() {
      // App is cached for offline use.
      // Could display a toast here if desired.
    },
  });
} else if ('serviceWorker' in navigator) {
  // In development, ensure any previously registered SWs are unregistered
  // to avoid them intercepting requests and causing ERR_EMPTY_RESPONSE.
  navigator.serviceWorker.getRegistrations().then((regs) => {
    regs.forEach((r) => r.unregister());
  }).catch(() => {
    // no-op
  });
}

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);
